// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class Ex2Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void ex2() {
    // Test name: ex2
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://blazedemo.com/");
    // 2 | setWindowSize | 787x692 | 
    driver.manage().window().setSize(new Dimension(787, 692));
    // 3 | click | name=fromPort | 
    driver.findElement(By.name("fromPort")).click();
    // 4 | select | name=fromPort | label=Boston
    {
      WebElement dropdown = driver.findElement(By.name("fromPort"));
      dropdown.findElement(By.xpath("//option[. = 'Boston']")).click();
    }
    // 5 | click | css=.form-inline:nth-child(1) > option:nth-child(3) | 
    driver.findElement(By.cssSelector(".form-inline:nth-child(1) > option:nth-child(3)")).click();
    // 6 | click | name=toPort | 
    driver.findElement(By.name("toPort")).click();
    // 7 | select | name=toPort | label=London
    {
      WebElement dropdown = driver.findElement(By.name("toPort"));
      dropdown.findElement(By.xpath("//option[. = 'London']")).click();
    }
    // 8 | click | css=.form-inline:nth-child(4) > option:nth-child(3) | 
    driver.findElement(By.cssSelector(".form-inline:nth-child(4) > option:nth-child(3)")).click();
    // 9 | click | css=.btn-primary | 
    driver.findElement(By.cssSelector(".btn-primary")).click();
    // 10 | click | css=tr:nth-child(3) .btn | 
    driver.findElement(By.cssSelector("tr:nth-child(3) .btn")).click();
    // 11 | assertNotChecked | id=rememberMe | 
    assertFalse(driver.findElement(By.id("rememberMe")).isSelected());
    // 12 | click | css=.btn-primary | 
    driver.findElement(By.cssSelector(".btn-primary")).click();
    // 13 | assertTitle | BlazeDemo Confirmation | 
    assertThat(driver.getTitle(), is("BlazeDemo Confirmation"));
  }
}
